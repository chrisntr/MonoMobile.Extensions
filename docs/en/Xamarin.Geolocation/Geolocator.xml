<Type Name="Geolocator" FullName="Xamarin.Geolocation.Geolocator">
  <TypeSignature Language="C#" Value="public class Geolocator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Geolocator extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mobile</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
    <AssemblyVersion>0.3.0.0</AssemblyVersion>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
    <AssemblyVersion>0.5.0.0</AssemblyVersion>
    <AssemblyVersion>0.5.1.0</AssemblyVersion>
    <AssemblyVersion>0.6.1.0</AssemblyVersion>
    <AssemblyVersion>0.6.2.0</AssemblyVersion>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A class providing the ability to get or listen to the device's current geo-location.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Geolocator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <param name="context">The context from which to get the location service.</param>
        <summary>Creates and initializes a new instance of the <see cref="T:Xamarin.Geolocation.Geolocator" /> class (iOS only).</summary>
        <remarks>iOS and Windows Phone only.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Geolocator (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context from which to get the location service.</param>
        <summary>Creates and initializes a new instance of the <see cref="T:Xamarin.Geolocation.Geolocator" /> class with a <see cref="T:Android.Content.Context" /> (Android only).</summary>
        <remarks>Android only.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredAccuracy">
      <MemberSignature Language="C#" Value="public double DesiredAccuracy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DesiredAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the desired accuracy in meters.</summary>
        <value>Desired accuracy in meters.</value>
        <remarks>
          <para>This is only a hint to the underlying platform, you may receive location updates with higher or lower accuracy.</para>
          <para>
				Changes to this while the geolocator <see cref="P:Xamarin.Geolocation.Geolocator.IsListening" /> will have no effect until the next time
				<see cref="M:Xamarin.Geolocation.Geolocator.StartListening" /> is called.
			</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetPositionAsync (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetPositionAsync(int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">The amount of time in milliseconds to wait for <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> before returning a best guess or cancelling.</param>
        <summary>Requests the device's current location and returns a future to it.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task{TResult}" /> for the current <see cref="T:Xamarin.Geolocation.Position" />.</returns>
        <remarks>
          <para>
				The task will be set with the first <see cref="T:Xamarin.Geolocation.Position" /> with a <see cref="P:Xamarin.Geolocation.Position.Accuracy" />
				greater than or equal to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />. If a position with the desired accuracy can not be
				obtained within <paramref name="timeout" />, the most accurate position found will be used. If no position could be found at all within
				<paramref name="timeout" />, the task will be canceled.
		  </para>
          <para>
				If the underlying platform needs to request location access permissions, it will be performed automatically.
				If all location services are disabled or a fatal error occurs, the future will contain <see cref="T:Xamarin.Geolocation.GeolocationException" />
				with <see cref="P:Xamarin.Geolocation.GeolocationException.Error" /> of <see cref="F:Xamarin.Geolocation.GeolocationError.PositionUnavailable" />.
			    If the user has denied location access to the app (iOS), or the app didn't specify location acccess in its manifest (Android), the error will be
				<see cref="F:Xamarin.Geolocation.GelocationError.Unauthorized" />.
		  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetPositionAsync (System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetPositionAsync(valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancelToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the position request.</param>
        <summary>Requests the device's current location and returns a future to it.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task{TResult}" /> for the current <see cref="T:Xamarin.Geolocation.Position" />.</returns>
        <remarks>
          <para>
				The task will be set with the first <see cref="T:Xamarin.Geolocation.Position" /> with a <see cref="P:Xamarin.Geolocation.Position.Accuracy" />
				greater than or equal to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />.
		  </para>
          <para>
			  If the underlying platform needs to request location access permissions, it will be performed automatically.
			  If all location services are disabled or a fatal error occurs, the future will contain <see cref="T:Xamarin.Geolocation.GeolocationException" />
			  with <see cref="P:Xamarin.Geolocation.GeolocationException.Error" /> of <see cref="F:Xamarin.Geolocation.GeolocationError.PositionUnavailable." />
			  If the user has denied location access to the app (iOS), or the app didn't specify location acccess in its manifest (Android), the error will be
			  <see cref="F:Xamarin.Geolocation.GelocationError.Unauthorized" />.
		  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetPositionAsync (int timeout, bool includeHeading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetPositionAsync(int32 timeout, bool includeHeading) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="includeHeading" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">The amount of time in milliseconds to wait for <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> before returning a best guess or cancelling.</param>
        <param name="includeHeading">Whether or not to also listen for heading changes.</param>
        <summary>Requests the device's current location and returns a future to it.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task{TResult}" /> for the current <see cref="T:Xamarin.Geolocation.Position" />.</returns>
        <remarks>
          <para>
				The task will be set with the first <see cref="T:Xamarin.Geolocation.Position" /> with a <see cref="P:Xamarin.Geolocation.Position.Accuracy" />
				greater than or equal to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />. If a position with the desired accuracy can not be
				obtained within <paramref name="timeout" />, the most accurate position found will be used. If no position could be found at all within
				<paramref name="timeout" />, the task will be canceled.
		  </para>
          <para>
				If the underlying platform needs to request location access permissions, it will be performed automatically.
				If all location services are disabled or a fatal error occurs, the future will contain <see cref="T:Xamarin.Geolocation.GeolocationException" />
				with <see cref="P:Xamarin.Geolocation.GeolocationException.Error" /> of GeolocationError.PositionUnavailable. If the user has denied location
				access to the app (iOS), or the app didn't specify location acccess in its manifest (Android), the error will be GelocationError.Unauthorized.
		  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetPositionAsync (int timeout, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetPositionAsync(int32 timeout, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">The amount of time in milliseconds to wait for <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> before returning a best guess or cancelling.</param>
        <param name="cancelToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the position request.</param>
        <summary>Requests the device's current location and returns a future to it.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task{TResult}" /> for the current <see cref="T:Xamarin.Geolocation.Position" />.</returns>
        <remarks>
          <para>
				The task will be set with the first <see cref="T:Xamarin.Geolocation.Position" /> with a <see cref="P:Xamarin.Geolocation.Position.Accuracy" />
				greater than or equal to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />. If a position with the desired accuracy can not be
				obtained within <paramref name="timeout" />, the most accurate position found will be used. If no position could be found at all within
				<paramref name="timeout" />, the task will be canceled.
		  </para>
          <para>
				If the underlying platform needs to request location access permissions, it will be performed automatically.
				If all location services are disabled or a fatal error occurs, the future will contain <see cref="T:Xamarin.Geolocation.GeolocationException" />
				with <see cref="P:Xamarin.Geolocation.GeolocationException.Error" /> of GeolocationError.PositionUnavailable. If the user has denied location
				access to the app (iOS), or the app didn't specify location acccess in its manifest (Android), the error will be GelocationError.Unauthorized.
		  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetPositionAsync (System.Threading.CancellationToken cancelToken, bool includeHeading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetPositionAsync(valuetype System.Threading.CancellationToken cancelToken, bool includeHeading) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="includeHeading" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancelToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the position request.</param>
        <param name="includeHeading">Whether or not to also listen for heading changes.</param>
        <summary>Requests the device's current location and returns a future to it.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task{TResult}" /> for the current <see cref="T:Xamarin.Geolocation.Position" />.</returns>
        <remarks>
          <para>
				The task will be set with the first <see cref="T:Xamarin.Geolocation.Position" /> with a <see cref="P:Xamarin.Geolocation.Position.Accuracy" />
				greater than or equal to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />.
		  </para>
          <para>
			  If the underlying platform needs to request location access permissions, it will be performed automatically.
			  If all location services are disabled or a fatal error occurs, the future will contain <see cref="T:Xamarin.Geolocation.GeolocationException" />
			  with <see cref="P:Xamarin.Geolocation.GeolocationException.Error" /> of <see cref="F:Xamarin.Geolocation.GeolocationError.PositionUnavailable." />
			  If the user has denied location access to the app (iOS), or the app didn't specify location acccess in its manifest (Android), the error will be
			  <see cref="F:Xamarin.Geolocation.GelocationError.Unauthorized" />.
		  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetPositionAsync (int timeout, System.Threading.CancellationToken cancelToken, bool includeHeading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetPositionAsync(int32 timeout, valuetype System.Threading.CancellationToken cancelToken, bool includeHeading) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="includeHeading" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">The amount of time in milliseconds to wait for <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> before returning a best guess or cancelling.</param>
        <param name="cancelToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the position request.</param>
        <param name="includeHeading">Whether or not to also listen for heading changes.</param>
        <summary>Requests the device's current location and returns a future to it.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task{TResult}" /> for the current <see cref="T:Xamarin.Geolocation.Position" />.</returns>
        <remarks>
          <para>
				The task will be set with the first <see cref="T:Xamarin.Geolocation.Position" /> with a <see cref="P:Xamarin.Geolocation.Position.Accuracy" />
				greater than or equal to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />. If a position with the desired accuracy can not be
				obtained within <paramref name="timeout" />, the most accurate position found will be used. If no position could be found at all within
				<paramref name="timeout" />, the task will be canceled.
		  </para>
          <para>
				If the underlying platform needs to request location access permissions, it will be performed automatically.
				If all location services are disabled or a fatal error occurs, the future will contain <see cref="T:Xamarin.Geolocation.GeolocationException" />
				with <see cref="P:Xamarin.Geolocation.GeolocationException.Error" /> of GeolocationError.PositionUnavailable. If the user has denied location
				access to the app (iOS), or the app didn't specify location acccess in its manifest (Android), the error will be GelocationError.Unauthorized.
		  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeolocationAvailable">
      <MemberSignature Language="C#" Value="public bool IsGeolocationAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeolocationAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether geolocation services are available on the device.
        </summary>
        <value>
          <c>true</c> if geolocation services are available; otherwise, <c>false</c>.
        </value>
        <remarks>
          <para>
				Use this to determine whether the device supports geolocation. On Android, this will also
				be false if the manifest has not requested any location permissions.
			</para>
        </remarks>
        <altmember cref="P:Xamarin.Geolocation.Geolocator.IsGeolocationEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsGeolocationEnabled">
      <MemberSignature Language="C#" Value="public bool IsGeolocationEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeolocationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether geolocation is available and enabled.
        </summary>
        <value>
          <c>true</c> if geolocation is available and enabled; otherwise, <c>false</c>.
        </value>
        <remarks>
          <para>
				Use this to determine whether geolocation is enabled by the user or not. It will also
				return false if geolocation is unavailable, so use it conjunction with <see cref="P:Xamarin.Geolocation.Geolocator.IsGeolocationAvailable" />
				if you wish to prompt the user about enabling geolocation services.
			</para>
          <para>
				On iOS, this will be false if location services are disabled or explicitly turned off for this app.
				On Android, this will be false if both wifi and gps location services are disabled (and passive is unavailable).
			</para>
        </remarks>
        <altmember cref="P:Xamarin.Geolocation.Geolocator.IsGeolocationAvailable" />
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the position is currently being listened to.</summary>
        <value>
          <c>true</c> if this geolocator is currently listening to position updates; otherwise, <c>false</c>.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Geolocation.PositionEventArgs&gt; PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Geolocation.PositionEventArgs&gt; PositionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Geolocation.PositionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised when position information is updated.</summary>
        <remarks>
          <para>
				This event will fire even when the contained <see cref="T:Xamarin.Geolocation.Position" /> is below <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />.
			</para>
          <para>
				The various implementations will do their best to provide the most accurate <see cref="T:Xamarin.Geolocation.Position" /> up to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />.
				In order to receive initial updates more quickly, you may receive less accurate updates to begin with. You may also begin receiving more accurate updates than you require,
				as <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> is only a hint and can not definitively set what accuracy level you receive.
			</para>
        </remarks>
        <altmember cref="T:Xamarin.Geolocation.Position" />
      </Docs>
    </Member>
    <Member MemberName="PositionError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Geolocation.PositionErrorEventArgs&gt; PositionError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Geolocation.PositionErrorEventArgs&gt; PositionError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Geolocation.PositionErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised when there is an error retrieving position information while listening.</summary>
        <remarks>
          <para>
			  Errors are raised only when listening (<see cref="M:Xamarin.Geolocation.Geolocator.StartListening" />). If the app was suspended, there is
			  no guarantee that this event will be raised upon resume if the user has disabled location services inbetween suspending and resuming. It's
			  recommended that you stop listening on suspension and start again when the app is resumed.
		  </para>
          <para>If an error occurs, listening will be stopped automatically. Temporary errors will not be reported.</para>
        </remarks>
        <altmember cref="T:Xamarin.Geolocation.GeolocationError" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (int minTime, double minDistance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartListening(int32 minTime, float64 minDistance) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTime" Type="System.Int32" />
        <Parameter Name="minDistance" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minTime">A hint for the minimum time between position updates in milliseconds.</param>
        <param name="minDistance">A hint for the minimum distance between position updates in meters.</param>
        <summary>Starts listening to position changes with specified thresholds.</summary>
        <remarks>
          <para>
            If the underlying OS needs to request location access permissions, it will occur automatically.
          </para>
          <para>
            If a <see cref="E:Xamarin.Geolocation.Geolocator.PositionError" /> occurs, listening will be halted automatically.
          </para>
          <para>
			The various implementations will do their best to provide the most accurate <see cref="T:Xamarin.Geolocation.Position" /> up to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />.
			In order to receive initial updates more quickly, you may receive less accurate updates to begin with. You may also begin receiving more accurate updates than you require,
			as <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> is only a hint and can not definitively set what accuracy level you receive.
		  </para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="minTime" /> is &lt; 0.
          </para>
          <para>or</para>
          <para>
            <paramref name="minDistance" /> is &lt; 0.
          </para>
        </exception>
        <exception cref="T:System.InvalidOperationException">This geolocator already <see cref="P:Xamarin.Geolocation.Geolocator.IsListening" />.</exception>
        <altmember cref="M:Xamarin.Geolocation.Geolocator.StopListening" />
        <altmember cref="P:Xamarin.Geolocation.Geolocator.IsListening" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (int minTime, double minDistance, bool includeHeading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartListening(int32 minTime, float64 minDistance, bool includeHeading) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTime" Type="System.Int32" />
        <Parameter Name="minDistance" Type="System.Double" />
        <Parameter Name="includeHeading" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minTime">A hint for the minimum time between position updates in milliseconds.</param>
        <param name="minDistance">A hint for the minimum distance between position updates in meters.</param>
        <param name="includeHeading">Whether or not to also listen for heading.</param>
        <summary>Starts listening to position changes with specified thresholds.</summary>
        <remarks>
          <para>
            If the underlying OS needs to request location access permissions, it will occur automatically.
          </para>
          <para>
            If a <see cref="E:Xamarin.Geolocation.Geolocator.PositionError" /> occurs, listening will be halted automatically.
          </para>
          <para>
			The various implementations will do their best to provide the most accurate <see cref="T:Xamarin.Geolocation.Position" /> up to <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" />.
			In order to receive initial updates more quickly, you may receive less accurate updates to begin with. You may also begin receiving more accurate updates than you require,
			as <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> is only a hint and can not definitively set what accuracy level you receive.
		  </para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="minTime" /> is &lt; 0.
          </para>
          <para>or</para>
          <para>
            <paramref name="minDistance" /> is &lt; 0.
          </para>
        </exception>
        <exception cref="T:System.InvalidOperationException">This geolocator already <see cref="P:Xamarin.Geolocation.Geolocator.IsListening" />.</exception>
        <altmember cref="M:Xamarin.Geolocation.Geolocator.StopListening" />
        <altmember cref="P:Xamarin.Geolocation.Geolocator.IsListening" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopListening() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops listening to position changes.</summary>
        <remarks />
        <altmember cref="M:Xamarin.Geolocation.Geolocator.StartListening(System.Int32,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHeading">
      <MemberSignature Language="C#" Value="public bool SupportsHeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.0.0</AssemblyVersion>
        <AssemblyVersion>0.5.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.1.0</AssemblyVersion>
        <AssemblyVersion>0.6.2.0</AssemblyVersion>
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this <see cref="T:Xamarin.Geolocation.Geolocator" /> supports heading.</summary>
        <value>
          <c>true</c> if supports heading; otherwise, <c>false</c>.
        </value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
